@string{ieeeicsm="IEEE International Conference on Software Maintenance"} 
@string{acmase="IEEE/ACM ASE"}
@string{mutationworkshop = "Workshop on Mutation Analysis"}
@string{sbstworkshop = "Workshop on Search-Based Software Testing"}
@string{fst="Foundations of Software Testing"}
@string{sbes="Software Engineering (SBES), 2011 25th Brazilian Symposium on"}
@string{astw="International Workshop on Automation of Software Test"}
@string{advse="Advances in Software Engineering"}
@string{acmse="ACM Annual Southeast Regional Conference"}
@string{acmse="ACM Annual Southeast Regional Conference"}
@string{fse="ACM SIGSOFT Symposium on The Foundations of Software Engineering"}
@string{popl = "ACM SIGPLAN-SIGACT symposium on Principles of programming languages"}
@string{icse = "International Conference on Software Engineering"}
@string{ijmms = "International Journal of Man-machine Studies"}
@string{stvr = "Software Testing, Verification and Reliability"}
@string{stva = "Software Testing, Verification and Analysis"}
@string{computer = "Computer"}
@string{acmsen = "ACM SIGSOFT Software Engineering Notes"}
@string{ieeetse = "IEEE Transactions on Software Engineering"}
@string{acmtsem = "ACM Transactions on Software Engineering and Methodology"}
@string{issrew = "International Symposium on Software Reliability Engineering Workshops"}
@string{tosem = "ACM Transactions on Software Engineering and Methodology"}
@string{compsac = "Computer Software and Applications Conference."}
@string{acmissta = "ACM SIGSOFT International Symposium on Software Testing and Analysis"}
@string{jss = "The Journal of Systems and Software"}
@string{issre = "International Symposium on Software Reliability Engineering"}
@string{scp = "Science of Computer Programming"}
@string{ist = "Information and Software Technology"}
@string{icstw = "International Conference on Software Testing, Verification and Validation Workshops"}
@string{icst = "International Conference on Software Testing, Verification and Validation"}
@string{ieeescam = "IEEE International Working Conference on Source Code Analysis and Manipulation"}

@article{hughes2016building,
 author = {Hughes, Jeffrey and Sparks, Cassandra and Stoughton, Alley and Parikh, Rinku and Reuther, Albert and Jagannathan, Suresh},
 title = {Building Resource Adaptive Software Systems ({BRASS}): Objectives and System Evaluation},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {January 2016},
 volume = {41},
 number = {1},
 month = feb,
 year = {2016},
 issn = {0163-5948},
 pages = {1--2},
 numpages = {2},
 acmid = {2853081}

} 


@ARTICLE{LeGoues2012genprog, 
author={C. Le Goues and T. Nguyen and S. Forrest and W. Weimer}, 
journal={IEEE Transactions on Software Engineering}, 
title={{GenProg:} A Generic Method for Automatic Software Repair}, 
year={2012}, 
volume={38}, 
number={1}, 
pages={54-72}, 
keywords={formal specification;genetic algorithms;software maintenance;GenProg;automatic software repair;defects repair;formal specifications;genetic programming;legacy programs;program annotations;special coding practices;Automatic programming;Computer bugs;Debugging;Encoding;Maintenance engineering;Syntactics;Automatic programming;corrections;testing and debugging.}, 
doi={10.1109/TSE.2011.104}, 
ISSN={0098-5589}, 
month={Jan},}

@article{Oreizy1999adaptdef,
 author = {Oreizy, Peyman and Gorlick, Michael M. and Taylor, Richard N. and Heimbigner, Dennis and Johnson, Gregory and Medvidovic, Nenad and Quilici, Alex and Rosenblum, David S. and Wolf, Alexander L.},
 title = {An Architecture-Based Approach to Self-Adaptive Software},
 journal = {IEEE Intelligent Systems},
 issue_date = {May 1999},
 volume = {14},
 number = {3},
 month = may,
 year = {1999},
 issn = {1541-1672},
 pages = {54--62},
 numpages = {9},
 
 doi = {10.1109/5254.769885},
 acmid = {630460},
 publisher = {IEEE Educational Activities Department}
} 

@inproceedings{frasernaming,
  author = "Ermira Daka and Jose Miguel Rojas and Gordon Fraser",
  title = "Generating Unit Tests with Descriptive Names Or: Would you name your children thing1 and thing2?",
  year = 2017,
  booktitle = "International Symposium on Software Testing and Analysis",
  note = "to appear"
  }

@inproceedings{christi2019qrs,
  author = "Arpit Christi and Alex Groce and Rahul Gopinath",
  title = "Evaluating Fault Localization for Resource Adaptation via Test-based Software Modification",
  year = 2019,
  booktitle = "IEEE International Conference on Software Quality, Reliability and Security (QRS)",
  note = "to be published"
  }



@inproceedings{pearson2017evaluating,
  title={Evaluating and improving fault localization},
  author={Pearson, Spencer and Campos, Jos{\'e} and Just, Ren{\'e} and Fraser, Gordon and Abreu, Rui and Ernst, Michael D and Pang, Deric and Keller, Benjamin},
  booktitle={International Conference on Software Engineering},
  pages={609--620},
  year={2017},
  
}

@article{yoo2014no,
  title={No pot of gold at the end of program spectrum rainbow: Greatest risk evaluation formula does not exist},
  author={Yoo, Shin and Xie, Xiaoyuan and Kuo, Fei-Ching and Chen, Tsong Yueh and Harman, Mark},
  journal={RN},
  volume={14},
  number={14},
  pages={14},
  year={2014},
  publisher={Citeseer}
}

@inproceedings{christi18reduce,
  author    = {Arpit Christi and
               Matthew Lyle Olson and
               Mohammad Amin Alipour and
               Alex Groce},
  title     = {Reduce Before You Localize: Delta-Debugging and Spectrum-Based Fault
               Localization},
  booktitle = {2018 {IEEE} International Symposium on Software Reliability Engineering
               Workshops, {ISSRE} Workshops, Memphis, TN, USA, October 15-18, 2018},
  pages     = {184--191},
  year      = {2018},
   
}



  

@INPROCEEDINGS{perez17prevalence, 
author={A. Perez and R. Abreu and M. D'Amorim}, 
booktitle={2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)}, 
title={Prevalence of Single-Fault Fixes and Its Impact on Fault Localization}, 
year={2017}, 
volume={}, 
number={}, 
pages={12-22}, 
keywords={fault diagnosis;program debugging;single-fault fixes;spectrum-based fault localization approaches;model-based techniques;multiple-faulted scenarios;single-fault fix prevalence;open-source projects;Computer bugs;Computational modeling;Open source software;Debugging;Java;Terminology}, 
doi={10.1109/ICST.2017.9}, 
ISSN={}, 
month={March},}
@INPROCEEDINGS{Yu2008empirical, 
author={Y. Yu and J. Jones and M. J. Harrold}, 
booktitle={2008 ACM/IEEE 30th International Conference on Software Engineering}, 
title={An empirical study of the effects of test-suite reduction on fault localization}, 
year={2008}, 
volume={}, 
number={}, 
pages={201-210}, 
keywords={program testing;software fault tolerance;fault-localization techniques;program execution;test-suite reduction strategy;program testing;Fault diagnosis;Software testing;Permission;Educational institutions;Size measurement;Software engineering;Software debugging;empirical study;fault localization;test-suite reduction}, 
doi={10.1145/1368088.1368116}, 
ISSN={0270-5257}, 
month={May},}


@article{salehie2009selfadaptive,
 author = {Salehie, Mazeiar and Tahvildari, Ladan},
 title = {Self-adaptive Software: Landscape and Research Challenges},
 journal = {ACM Trans. Auton. Adapt. Syst.},
 issue_date = {May 2009},
 volume = {4},
 number = {2},
 month = may,
 year = {2009},
 issn = {1556-4665},
 pages = {14:1--14:42},
 articleno = {14},
 numpages = {42},
 publisher = {ACM},
 keywords = {Adaptation processes, research challenges, self-adaptive software, self-properties, survey}
} 


@inproceedings{Testedness,
 author = {Ahmed, Iftekhar and Gopinath, Rahul and Brindescu, Caius and Groce, Alex and Jensen, Carlos},
 title = {Can Testedness Be Effectively Measured?},
 booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2016},
 year = {2016},
 isbn = {978-1-4503-4218-6},
 location = {Seattle, WA, USA},
 pages = {547--558},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2950290.2950324},
 doi = {10.1145/2950290.2950324},
 acmid = {2950324},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {coverage criteria, mutation testing, statistical analysis, test suite evaluation},
} 
[download]

@article{krupitzer2015a,
 author = {Krupitzer, Christian and Roth, Felix Maximilian and VanSyckel, Sebastian and Schiele, Gregor and Becker, Christian},
 title = {A Survey on Engineering Approaches for Self-adaptive Systems},
 journal = {Pervasive Mob. Comput.},
 issue_date = {February 2015},
 volume = {17},
 number = {PB},
 month = feb,
 year = {2015},
 issn = {1574-1192},
 pages = {184--206},
 numpages = {23},
 publisher = {Elsevier Science Publishers B. V.},
 keywords = {Context adaptation, Self-adaptation, Self-adaptive systems, Survey, Taxonomy}
}

@INPROCEEDINGS{appleby2001, 
author={K. Appleby and S. Fakhouri and L. Fong and G. Goldszmidt and M. Kalantar and S. Krishnakumar and D. P. Pazel and J. Pershing and B. Rochwerger}, 
booktitle={2001 IEEE/IFIP International Symposium on Integrated Network Management Proceedings. Integrated Network Management VII. Integrated Management Strategies for the New Millennium (Cat. No.01EX470)}, 
title={Oceano-SLA based management of a computing utility}, 
year={2001}, 
volume={}, 
number={}, 
pages={855-868}, 
keywords={computer network management;electronic commerce;performance evaluation;resource allocation;telecommunication network management;Oceano-SLA based management;available infrastructure;dynamic domains;dynamic resource allocation;e-business computing utility;manageable infrastructure;scaleable infrastructure;secure domains;sequentially shared resources;service level agreements;Computer networks;Computerized monitoring;Condition monitoring;Costs;Dolphins;Network servers;Prototypes;Resource management;Steady-state;Whales}, 
ISSN={}, 
month={},}

@inproceedings{AlNashif2008,
 author = {Al-Nashif, Youssif and Kumar, Aarthi Arun and Hariri, Salim and Luo, Yi and Szidarovsky, Ferenc and Qu, Guangzhi},
 title = {Multi-Level Intrusion Detection System {(ML-IDS)}},
 booktitle = {International Conference on Autonomic Computing},
 year = {2008},
 isbn = {978-0-7695-3175-5},
 pages = {131--140},
 numpages = {10},
 doi = {10.1109/ICAC.2008.25},
 acmid = {1444661}
} 

@inproceedings{Loyall1998,
 author = {Loyall, Joseph P. and Bakken, David E. and Schantz, Richard E. and Zinky, John A. and Karr, David A. and Vanegas, Rodrigo and Anderson, Kenneth R.},
 title = {{QoS} Aspect Languages and Their Runtime Integration},
 booktitle = {International Workshop on Languages, Compilers, and Run-Time Systems for Scalable Computers},
 year = {1998},
 isbn = {3-540-65172-1},
 pages = {303--318},
 numpages = {16},
 acmid = {745881}
} 

@inproceedings{Dowling2004,
 author = {Dowling, Jim and Cahill, Vinny},
 title = {Self-managed Decentralised Systems Using K-components and Collaborative Reinforcement Learning},
 booktitle = {ACM SIGSOFT Workshop on Self-managed Systems},
 year = {2004},
 isbn = {1-58113-989-6},
 location = {Newport Beach, California},
 pages = {39--43},
 numpages = {5},

 doi = {10.1145/1075405.1075413},
 acmid = {1075413},
 keywords = {architectural reflection, collaborative reinforcement learning, decentralised self-adaptive systems},
} 

@incollection{Robertson2005,
 author = {Robertson, Paul and Laddaga, Robert},
 chapter = {Model Based Diagnosis and Contexts in Self Adaptive Software},
 title = {Self-star Properties in Complex Information Systems},
 booktitle = {Self-star Properties in Complex Information Systems},
 editor = {Babaoglu, Ozalp and Jelasity, M\'{a}rk and Montresor, Alberto and Fetzer, Christof and Leonardi, Stefano},
 year = {2005},
 isbn = {3-540-26009-9, 978-3-540-26009-7},
 pages = {112--127},
 numpages = {16},

 acmid = {2167586},
 publisher = {Springer-Verlag}
} 

@inproceedings{luckey2013adaptivespecification,
 author = {Luckey, Markus and Engels, Gregor},
 title = {High-quality Specification of Self-adaptive Software Systems},
 booktitle = {International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
 year = {2013},
 isbn = {978-1-4673-4401-2},
 location = {San Francisco, CA, USA},
 pages = {143--152},
 numpages = {10},

 acmid = {2487359},
} 


@inproceedings{fleurey2009adaptreuirelanguage,
 author = {Fleurey, Franck and Solberg, Arnor},
 title = {A Domain Specific Modeling Language Supporting Specification, Simulation and Execution of Dynamic Adaptive Systems},
 booktitle = {International Conference on Model Driven Engineering Languages and Systems},
 year = {2009},
 isbn = {978-3-642-04424-3},
 location = {Denver, CO},
 pages = {606--621},
 numpages = {16},

 doi = {10.1007/978-3-642-04425-0_47},
 acmid = {1691383},
} 

@inproceedings{whittle2009relax,
 author = {Whittle, Jon and Sawyer, Pete and Bencomo, Nelly and Cheng, Betty H. C. and Bruel, Jean-Michel},
 title = {{RELAX:} Incorporating Uncertainty into the Specification of Self-Adaptive Systems},
 booktitle = {IEEE International Requirements Engineering Conference, RE},
 year = {2009},
 isbn = {978-0-7695-3761-0},
 pages = {79--88},
 numpages = {10},

 doi = {10.1109/RE.2009.36},
 acmid = {1684854},
 keywords = {requirements, self-adaptation, uncertainty},
} 

@inproceedings{Lamsweerde2000formalspecs,
 author = {Lamsweerde, Axel van},
 title = {Formal Specification: A Roadmap},
 booktitle = {Proceedings of the Conference on The Future of Software Engineering},
 series = {ICSE '00},
 year = {2000},
 isbn = {1-58113-253-0},
 location = {Limerick, Ireland},
 pages = {147--159},
 numpages = {13},

 doi = {10.1145/336512.336546},
 acmid = {336546},
 publisher = {ACM}
} 

@ARTICLE{garlan2004rainbow, 
author={D. Garlan and S. W. Cheng and A. C. Huang and B. Schmerl and P. Steenkiste}, 
journal={Computer}, 
title={Rainbow: architecture-based self-adaptation with reusable infrastructure}, 
year={2004}, 
volume={37}, 
number={10}, 
pages={46-54}, 
keywords={client-server systems;open systems;software architecture;software reusability;system monitoring;Rainbow architecture-based self-adaptation;adaptation triggering;client-server system software architecture;cost reduction;reusable infrastructure;specialization mechanisms;system variety handling;Computer architecture;Computer interfaces;Computer languages;Control systems;Costs;Environmental management;Monitoring;Protocols;Software architecture;Software systems}, 
doi={10.1109/MC.2004.175}, 
ISSN={0018-9162}, 
month={Oct},
}

@INPROCEEDINGS{cheng2009rainbowevaluation, 
author={S. W. Cheng and D. Garlan and B. Schmerl}, 
booktitle={Workshop on Software Engineering for Adaptive and Self-Managing Systems}, 
title={Evaluating the effectiveness of the Rainbow self-adaptive system}, 
year={2009}, 
volume={}, 
number={}, 
pages={132-141}, 
keywords={Automatic control;Control systems;Face detection;Humans;Maintenance engineering;Monitoring;Quality of service;Runtime;Systems engineering and theory;Utility theory}, 
doi={10.1109/SEAMS.2009.5069082}, 
ISSN={2157-2305}, 
month={May},}

@inproceedings{cheng2006rainbowmultobj,
 author = {Cheng, Shang-Wen and Garlan, David and Schmerl, Bradley},
 title = {Architecture-based Self-adaptation in the Presence of Multiple Objectives},
 booktitle = {Proceedings of the 2006 International Workshop on Self-adaptation and Self-managing Systems},
 series = {SEAMS '06},
 year = {2006},
 isbn = {1-59593-403-0},
 location = {Shanghai, China},
 pages = {2--8},
 numpages = {7},

 doi = {10.1145/1137677.1137679},
 acmid = {1137679},
 publisher = {ACM},

 keywords = {choice, preference, repair language, self-adaptation, strategy, tactic, trade-off, utility},
} 

@inproceedings{elkhodary4role,
  title={On the Role of Features in Analyzing the Architecture of Self-Adaptive Software Systems},
  author={Elkhodary, Ahmed and Malek, Sam and Esfahani, Naeem},
  booktitle={4 th Workshop on Models@ run. time at MODELS 09},
  year={2009}
}

@inproceedings{Elkhodary2010,
 author = {Elkhodary, Ahmed and Esfahani, Naeem and Malek, Sam},
 title = {{FUSION:} A Framework for Engineering Self-tuning Self-adaptive Software Systems},
 booktitle = {Foundations of Software Engineering},
 year = {2010},
 isbn = {978-1-60558-791-2},
 location = {Santa Fe, New Mexico, USA},
 pages = {7--16},
 numpages = {10},

 doi = {10.1145/1882291.1882296},
 acmid = {1882296},
 keywords = {feature-orientation, learning, qos analysis, self-adaptation},
}

@article{yang2017thematicstudy,
  author    = {Zhuoqun Yang and
               Zhi Li and
               Zhi Jin},
  title     = {A Thematic Study of Requirements Modeling and Analysis for Self-Adaptive
               Systems},
  journal   = {CoRR},
  volume    = {abs/1704.00420},
  year      = {2017},

  archivePrefix = {arXiv},
  eprint    = {1704.00420},
  timestamp = {Wed, 07 Jun 2017 14:40:22 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/YangLJ17},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{monperrus2018asr,
 author = {Monperrus, Martin},
 title = {Automatic Software Repair: A Bibliography},
 journal = {ACM Comput. Surv.},
 issue_date = {April 2018},
 volume = {51},
 number = {1},
 month = jan,
 year = {2018},
 issn = {0360-0300},
 pages = {17:1--17:24},
 articleno = {17},
 numpages = {24},

 doi = {10.1145/3105906},
 acmid = {3105906},
 publisher = {ACM},
 keywords = {Program repair, self-healing software},
} 

@inproceedings{LeGoues2012findingbugsat8dollars,
 author = {Le Goues, Claire and Dewey-Vogt, Michael and Forrest, Stephanie and Weimer, Westley},
 title = {A Systematic Study of Automated Program Repair: Fixing 55 out of 105 Bugs for \$8 Each},
 booktitle = {International Conference on Software Engineering},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {3--13},
 numpages = {11},

 acmid = {2337225},


} 

@inproceedings{smith2015cwd,
 author = {Smith, Edward K. and Barr, Earl T. and Le Goues, Claire and Brun, Yuriy},
 title = {Is the Cure Worse Than the Disease? Overfitting in Automated Program Repair},
 booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
 series = {ESEC/FSE 2015},
 year = {2015},
 isbn = {978-1-4503-3675-8},
 location = {Bergamo, Italy},
 pages = {532--543},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2786805.2786825},
 doi = {10.1145/2786805.2786825},
 acmid = {2786825},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {GenProg, IntroClass, TrpAutoRepair, automated program repair, empirical evaluation, independent evaluation},
} 

@inproceedings{Herfert2017GTR,
 author = {Herfert, Satia and Patra, Jibesh and Pradel, Michael},
 title = {Automatically Reducing Tree-structured Test Inputs},
 booktitle = {Proceedings of the 32Nd IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE 2017},
 year = {2017},
 isbn = {978-1-5386-2684-9},
 location = {Urbana-Champaign, IL, USA},
 pages = {861--871},
 numpages = {11},

 acmid = {3155669},
 

} 




@inproceedings{hildebrandt2000simplifying,
  title={Simplifying failure-inducing input},
  author={Hildebrandt, Ralf and Zeller, Andreas},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={25},
  number={5},
  pages={135--145},
  year={2000},
  organization={ACM}
}

@proceedings{saso2017,
  title     = {11th {IEEE} International Conference on Self-Adaptive and Self-Organizing
               Systems, {SASO} 2017, Tucson, AZ, USA, September 18-22, 2017},
  publisher = {{IEEE} Computer Society},
  year      = {2017},

  isbn      = {978-1-5090-6555-4},
  timestamp = {Mon, 23 Oct 2017 09:39:39 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/saso/2017},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@INPROCEEDINGS{christi2017saso, 
author={A. Christi and A. Groce and R. Gopinath}, 
booktitle={2017 IEEE 11th International Conference on Self-Adaptive and Self-Organizing Systems (SASO)}, 
title={Resource Adaptation via Test-Based Software Minimization}, 
year={2017}, 
volume={}, 
number={}, 
pages={61-70}, 
keywords={Java;program debugging;program testing;public domain software;software tools;Java class test suites;NetBeans IDE;core system functionality;delta-debugging;future situations;randomly selected subsets;resource adaptation;resource environments;resource usage adaptations;software systems;test cases;test-based software minimization;Adaptive systems;Hardware;Labeling;Minimization;Software systems;Tools;delta-debugging;program mutation;resource adaptation;tests as specifications}, 
doi={10.1109/SASO.2017.15}, 
ISSN={}, 
month={Sept},}

@INPROCEEDINGS{christi2018qrs, 
author={A. Christi and A. Groce}, 
booktitle={2018 IEEE International Conference on Software Quality, Reliability and Security (QRS)}, 
title={Target Selection for Test-Based Resource Adaptation}, 
year={2018}, 
volume={}, 
number={}, 
pages={458-469}, 
keywords={program debugging;program testing;resource allocation;software maintenance;software reliability;time-consuming reduction process;program statements;resource usage;deployed systems;target selection;test-based resource adaptation;software system;resource adaptive software;test-based software minimization;functionality;NetBeans IDE;Software systems;Minimization;Adaptive systems;Java;Software reliability;Software Testing;Self Adaptive Software System;automatic program repair}, 
doi={10.1109/QRS.2018.00059}, 
ISSN={}, 
month={July},}

@Article{LeGoues2013,
author="Le Goues, Claire
and Forrest, Stephanie
and Weimer, Westley",
title="Current challenges in automatic software repair",
journal="Software Quality Journal",
year="2013",
month="Sep",
day="01",
volume="21",
number="3",
pages="421--443",
abstract="The abundance of defects in existing software systems is unsustainable. Addressing them is a dominant cost of software maintenance, which in turn dominates the life cycle cost of a system. Recent research has made significant progress on the problem of automatic program repair, using techniques such as evolutionary computation, instrumentation and run-time monitoring, and sound synthesis with respect to a specification. This article serves three purposes. First, we review current work on evolutionary computation approaches, focusing on GenProg, which uses genetic programming to evolve a patch to a particular bug. We summarize algorithmic improvements and recent experimental results. Second, we review related work in the rapidly growing subfield of automatic program repair. Finally, we outline important open research challenges that we believe should guide future research in the area.",
issn="1573-1367",
doi="10.1007/s11219-013-9208-0"

}

@inproceedings{Forrest2009genetic,
 author = {Forrest, Stephanie and Nguyen, ThanhVu and Weimer, Westley and Le Goues, Claire},
 title = {A Genetic Programming Approach to Automated Software Repair},
 booktitle = {Proceedings of the 11th Annual Conference on Genetic and Evolutionary Computation},
 series = {GECCO '09},
 year = {2009},
 isbn = {978-1-60558-325-9},
 location = {Montreal, Qu\&\#233;bec, Canada},
 pages = {947--954},
 numpages = {8},

 doi = {10.1145/1569901.1570031},
 acmid = {1570031},
 publisher = {ACM},

 keywords = {genetic programming, software engineering, software repair},
} 

@inproceedings{Weimer2009automatically,
 author = {Weimer, Westley and Nguyen, ThanhVu and Le Goues, Claire and Forrest, Stephanie},
 title = {Automatically Finding Patches Using Genetic Programming},
 booktitle = {Proceedings of the 31st International Conference on Software Engineering},
 series = {ICSE '09},
 year = {2009},
 isbn = {978-1-4244-3453-4},
 pages = {364--374},
 numpages = {11},

 doi = {10.1109/ICSE.2009.5070536},
 acmid = {1555051},
 publisher = {IEEE Computer Society},

} 

@article{Weimer2010automatic,
 author = {Weimer, Westley and Forrest, Stephanie and Le Goues, Claire and Nguyen, ThanhVu},
 title = {Automatic Program Repair with Evolutionary Computation},
 journal = {Commun. ACM},
 issue_date = {May 2010},
 volume = {53},
 number = {5},
 month = may,
 year = {2010},
 issn = {0001-0782},
 pages = {109--116},
 numpages = {8},

 doi = {10.1145/1735223.1735249},
 acmid = {1735249},
 publisher = {ACM},

} 

@phdthesis{Arcuri2009phdthesis,
  author    = {Andrea Arcuri},
  title     = {Automatic software generation and improvement through search based
               techniques},
  school    = {University of Birmingham, {UK}},
  year      = {2009},

  timestamp = {Fri, 26 Aug 2016 14:29:53 +0200},
  biburl    = {https://dblp.org/rec/bib/phd/ethos/Arcuri09},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Arcuri2011evol,
  author    = {Andrea Arcuri},
  title     = {Evolutionary repair of faulty software},
  journal   = {Appl. Soft Comput.},
  volume    = {11},
  number    = {4},
  pages     = {3494--3514},
  year      = {2011},

  doi       = {10.1016/j.asoc.2011.01.023},
  timestamp = {Fri, 26 May 2017 22:54:33 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/asc/Arcuri11},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@ARTICLE{kephart2003visionofautonomic, 
author={J. O. Kephart and D. M. Chess}, 
journal={Computer}, 
title={The vision of autonomic computing}, 
year={2003}, 
volume={36}, 
number={1}, 
pages={41-50}, 
keywords={DP industry;autonomic computing;corporate-wide computing systems;self-managing computing systems;software complexity crisis;Biology computing;Computer industry;Computer vision;Crisis management;Environmental management;Humans;Internet;LAN interconnection;Pervasive computing;Technological innovation}, 
doi={10.1109/MC.2003.1160055}, 
ISSN={0018-9162}, 
month={Jan},}

@article{ahmad2012relaxandkaos,
title = "Using RELAX, SysML and KAOS for Ambient Systems Requirements Modeling",
journal = "Procedia Computer Science",
volume = "10",
pages = "474 - 481",
year = "2012",
note = "ANT 2012 and MobiWIS 2012",
issn = "1877-0509",
doi = "https://doi.org/10.1016/j.procs.2012.06.061",

author = "Manzoor Ahmad and Jean-Michel Bruel and Régine Laleau and Christophe Gnaho",
keywords = "Ambient Systems, Non Functional Requirements, Dynamic Adaptive Systems, Domain Speciﬁc Language, Relax, Requirements Engineering, Ambient Assisted Living"
}


@inproceedings{Weimer2013leveraging,
 author = {Weimer, Westley and Fry, Zachary P. and Forrest, Stephanie},
 title = {Leveraging Program Equivalence for Adaptive Program Repair: Models and First Results},
 booktitle = {International Conference on Automated Software Engineering},
 year = {2013},
 isbn = {978-1-4799-0215-6},
 location = {Silicon Valley, CA, USA},
 pages = {356--366},
 numpages = {11},

 doi = {10.1109/ASE.2013.6693094},
 acmid = {3107702},
 

 keywords = {automated program repair, mutation testing, program equivalence, search-based software engineering},
} 

@techreport{Xin2016ProgramRU,
  title={Program Repair Using Code Repositories},
  author={Qi Xin and Steven P. Reiss and Shriram Krishnamurthi},
  institution= {Brown University},
  year={2016}
}

@inproceedings{elbaum2001understanding,
  title={Understanding and measuring the sources of variation in the prioritization of regression test suites},
  author={Elbaum, Sebastian and Gable, David and Rothermel, Gregg},
  booktitle={Software Metrics Symposium, 2001. METRICS 2001. Proceedings. Seventh International},
  pages={169--179},
  year={2001},
  organization={IEEE}
}

@inproceedings{xuan2014test,
  title={Test case purification for improving fault localization},
  author={Xuan, Jifeng and Monperrus, Martin},
  booktitle={Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages={52--63},
  year={2014},
  organization={ACM}
}


@article{kwon2014cloud,
  title={Cloud refactoring: automated transitioning to cloud-based services},
  author={Kwon, Young-Woo and Tilevich, Eli},
  journal={Automated Software Engineering},
  volume={21},
  number={3},
  pages={345--372},
  year={2014},
  publisher={Springer}
}


@article{rothermel2001prioritizing,
  title={Prioritizing test cases for regression testing},
  author={Rothermel, Gregg and Untch, Roland H. and Chu, Chengyun and Harrold, Mary Jean},
  journal={IEEE Transactions on software engineering},
  volume={27},
  number={10},
  pages={929--948},
  year={2001},
  publisher={IEEE}
}

@inproceedings{rothermel1999test,
  title={Test case prioritization: An empirical study},
  author={Rothermel, Gregg and Untch, Roland H and Chu, Chengyun and Harrold, Mary Jean},
  booktitle={Software Maintenance, 1999.(ICSM'99) Proceedings. IEEE International Conference on},
  pages={179--188},
  year={1999},
  organization={IEEE}
}

@inproceedings{malishevsky2002modeling,
  title={Modeling the cost-benefits tradeoffs for regression testing techniques},
  author={Malishevsky, Alexey G and Rothermel, Gregg and Elbaum, Sebastian},
  booktitle={Software Maintenance, 2002. Proceedings. International Conference on},
  pages={204--213},
  year={2002},
  organization={IEEE}
}

@article{yoo2012regression,
  title={Regression testing minimization, selection and prioritization: a survey},
  author={Yoo, Shin and Harman, Mark},
  journal={Software Testing, Verification and Reliability},
  volume={22},
  number={2},
  pages={67--120},
  year={2012},
  publisher={Wiley Online Library}
}

@inproceedings{Shaw2014program,
 author = {Shaw, Alex},
 title = {Program Transformations to Fix C Buffer Overflows},
 booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering},
 series = {ICSE Companion 2014},
 year = {2014},
 isbn = {978-1-4503-2768-8},
 location = {Hyderabad, India},
 pages = {733--735},
 numpages = {3},

 doi = {10.1145/2591062.2591199},
 acmid = {2591199},
 publisher = {ACM},

 keywords = {Buffer overflow, program transformation, security},
} 

@article{karsai1999a,
 author = {Karsai, Gabor and Sztipanovits, Janos},
 title = {A Model-Based Approach to Self-Adaptive Software},
 journal = {IEEE Intelligent Systems},
 issue_date = {May 1999},
 volume = {14},
 number = {3},
 month = may,
 year = {1999},
 issn = {1541-1672},
 pages = {46--53},
 numpages = {8},
 acmid = {630459},

} 

@article{oreizy1999an,
 author = {Oreizy, Peyman and Gorlick, Michael M. and Taylor, Richard N. and Heimbigner, Dennis and Johnson, Gregory and Medvidovic, Nenad and Quilici, Alex and Rosenblum, David S. and Wolf, Alexander L.},
 title = {An Architecture-Based Approach to Self-Adaptive Software},
 journal = {IEEE Intelligent Systems},
 issue_date = {May 1999},
 volume = {14},
 number = {3},
 month = may,
 year = {1999},
 issn = {1541-1672},
 pages = {54--62},
 numpages = {9},
 acmid = {630460},

} 

@phdthesis{Weiser1979,
 author = {Weiser, Mark David},
 title = {Program Slices: Formal, Psychological, and Practical Investigations of an Automatic Program Abstraction Method},
 year = {1979},
 note = {AAI8007856},
 publisher = {University of Michigan},

} 

@article{Korel1988,
 author = {Korel, B. and Laski, J.},
 title = {Dynamic Program Slicing},
 journal = {Inf. Process. Lett.},
 issue_date = {October 26, 1988},
 volume = {29},
 number = {3},
 month = oct,
 year = {1988},
 issn = {0020-0190},
 pages = {155--163},
 numpages = {9},

 doi = {10.1016/0020-0190(88)90054-3},
 acmid = {56386},
 publisher = {Elsevier North-Holland, Inc.},

} 

@inproceedings{Wang2004,
 author = {Wang, Tao and Roychoudhury, Abhik},
 title = {Using Compressed Bytecode Traces for Slicing Java Programs},
 booktitle = {Proceedings of the 26th International Conference on Software Engineering},
 series = {ICSE '04},
 year = {2004},
 isbn = {0-7695-2163-0},
 pages = {512--521},
 numpages = {10},

 acmid = {999455},
 

} 


@book{tip1994survey,
  title={A survey of program slicing techniques},
  author={Tip, Frank},
  year={1994},
  publisher={Centrum voor Wiskunde en Informatica}
}

@inproceedings{hodovan2016modernizing,
 author = {Hodov\'{a}n, Ren\'{a}ta and Kiss, \'{A}kos},
 title = {Modernizing Hierarchical Delta Debugging},
 booktitle = {Proceedings of the 7th International Workshop on Automating Test Case Design, Selection, and Evaluation},
 series = {A-TEST 2016},
 year = {2016},
 isbn = {978-1-4503-4401-2},
 location = {Seattle, WA, USA},
 pages = {31--37},
 numpages = {7},
 acmid = {2994296},
 publisher = {ACM},

 keywords = {Extended Context-free Grammars, Hierarchical Delta Debugging, Parallel}
}


@inproceedings{misherghi2006hdd,
 author = {Misherghi, Ghassan and Su, Zhendong},
 title = {{HDD}: Hierarchical Delta Debugging},
 booktitle = {Proceedings of the 28th International Conference on Software Engineering},
 series = {ICSE '06},
 year = {2006},
 isbn = {1-59593-375-1},
 location = {Shanghai, China},
 pages = {142--151},
 numpages = {10},
 keywords = {automated debugging, delta debugging},
}


@inproceedings{sterling2005automated,
 author = {Sterling, Chad D. and Olsson, Ronald A.},
 title = {Automated Bug Isolation via Program Chipping},
 booktitle = {Proceedings of the Sixth International Symposium on Automated Analysis-driven Debugging},
 series = {AADEBUG'05},
 year = {2005},
 isbn = {1-59593-050-7},
 location = {Monterey, California, USA},
 pages = {23--32},
 numpages = {10},
 acmid = {1085134},
 publisher = {ACM},

 keywords = {bug isolation, data slicing, debugging, program chipping, program slicing},
} 

@article{zeller2002simplifying,
 author = {Zeller, Andreas and Hildebrandt, Ralf},
 title = {Simplifying and Isolating Failure-Inducing Input},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {February 2002},
 volume = {28},
 number = {2},
 month = feb,
 year = {2002},
 issn = {0098-5589},
 pages = {183--200},
 numpages = {18},
 acmid = {506206},
 

 keywords = {Automated debugging, debugging aids, testing tools, combinatorial testing, diagnostics, tracing.},
} 

@inproceedings{regehr2012test,
 author = {Regehr, John and Chen, Yang and Cuoq, Pascal and Eide, Eric and Ellison, Chucky and Yang, Xuejun},
 title = {Test-case Reduction for C Compiler Bugs},
 booktitle = {Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '12},
 year = {2012},
 isbn = {978-1-4503-1205-9},
 location = {Beijing, China},
 pages = {335--346},
 numpages = {12},

 doi = {10.1145/2254064.2254104},
 acmid = {2254104},
 publisher = {ACM},

 keywords = {automated testing, bug reporting, compiler defect, compiler testing, random testing, test-case minimization},
}

@misc{exemplars,
  title = {Self-Adaptive Systems Artifacts and Model Problems},
  howpublished={\url{https://www.hpi.uni-potsdam.de/giese/public/selfadapt/exemplars/}},
  note={Accessed: 2018-10-05}
  }

@misc{junitHome,
 title = {{JUnit Home page}},
 howpublished = {\url{https://junit.org/}},
 note={Accessed: 2018-08-09}
}
 
@misc{darpa2,
  title = "DARPA news article",
  howpublished = {\url{http://www.darpa.mil/news-events/2015-04-08}},
  note={Accessed: 2018-08-09}
}

@misc{seams2018keynote,
 author={Danny Hughes},
 title = {SEAMS 2018 Keynote Speech},
 howpublished = {\url{https://conf.researchr.org/track/seams-2018/seams-2018-papers#program}},
 note={Accessed: 2018-08-09}
}
 


@misc{javaparser,
 title = {{Java Parser}},
 howpublished = {\url{http://javaparser.org/}},
 note={Accessed: 2018-08-09}
 }
 
@misc{netbeans,
title={{NetBeans} {IDE}},
 howpublished = {\url{https://netbeans.org/}},
 note={Accessed: 2018-08-09}
 }

@misc{bug45011,
title="{Netbeans} {IDE} bug 45011",
 howpublished = {\url{https://netbeans.org/bugzilla/show_bug.cgi?id=50411}},
 note={Accessed: 2018-08-09}
}

@misc{ldtp,
title={{Linux Desktop Project}},
 howpublished = {\url{https://ldtp.freedesktop.org/wiki/}},
 note={Accessed: 2018-08-09}
}
 
@misc{jmap,
  title={JMap},
  howpublished = {\url{http://docs.oracle.com/javase/7/docs/technotes/tools/share/jmap.html}},
  note={Accessed: 2018-08-09}
}
 
@article{demillo1978hints,
 author = {DeMillo, R. A. and Lipton, R. J. and Sayward, F. G.},
 title = {Hints on Test Data Selection: Help for the Practicing Programmer},
 journal = {Computer},
 issue_date = {April 1978},
 volume = {11},
 number = {4},
 month = apr,
 year = {1978},
 issn = {0018-9162},
 pages = {34--41},
 numpages = {8},

 doi = {10.1109/C-M.1978.218136},
 acmid = {1301357},


}  

@inproceedings{2013empirical,
 author = {Deng, Lin and Offutt, Jeff and Li, Nan},
 title = {Empirical Evaluation of the Statement Deletion Mutation Operator},
 booktitle = {Proceedings of the 2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
 series = {ICST '13},
 year = {2013},
 isbn = {978-0-7695-4968-2},
 pages = {84--93},
 numpages = {10},

 doi = {10.1109/ICST.2013.20},
 acmid = {2511589},


 keywords = {Method-level Mutation Operators, Empirical Study, Statement Deletion Mutation Operator},
} 

@inproceedings{fredericks2013towards,
 author = {Fredericks, Erik M. and Ramirez, Andres J. and Cheng, Betty H. C.},
 title = {Towards Run-time Testing of Dynamic Adaptive Systems},
 booktitle = {International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
 year = {2013},
 isbn = {978-1-4673-4401-2},
 location = {San Francisco, CA, USA},
 pages = {169--174},
 numpages = {6},
 acmid = {2487363},
} 


@Inbook{Tamura2013,
author="Tamura, Gabriel
and Villegas, Norha M.
and M{\"u}ller, Hausi A.
and Sousa, Jo{\~a}o Pedro
and Becker, Basil
and Karsai, Gabor
and Mankovskii, Serge
and Pezz{\`e}, Mauro
and Sch{\"a}fer, Wilhelm
and Tahvildari, Ladan
and Wong, Kenny",
editor="de Lemos, Rog{\'e}rio
and Giese, Holger
and M{\"u}ller, Hausi A.
and Shaw, Mary",
title="Towards Practical Runtime Verification and Validation of Self-Adaptive Software Systems",
bookTitle="Software Engineering for Self-Adaptive Systems II: International Seminar, Dagstuhl Castle, Germany, October 24-29, 2010 Revised Selected and Invited Papers",
year="2013",
publisher="Springer Berlin Heidelberg",

pages="108--132",
abstract="Software validation and verification (V{\&}V) ensures that software products satisfy user requirements and meet their expected quality attributes throughout their lifecycle. While high levels of adaptation and autonomy provide new ways for software systems to operate in highly dynamic environments, developing certifiable V{\&}V methods for guaranteeing the achievement of self-adaptive software goals is one of the major challenges facing the entire research field. In this chapter we (i) analyze fundamental challenges and concerns for the development of V{\&}V methods and techniques that provide certifiable trust in self-adaptive and self-managing systems; and (ii) present a proposal for including V{\&}V operations explicitly in feedback loops for ensuring the achievement of software self-adaptation goals. Both of these contributions provide valuable starting points for V{\&}V researchers to help advance this field.",
isbn="978-3-642-35813-5",
doi="10.1007/978-3-642-35813-5_5"

}

@InProceedings{moradini2009,
author="Morandini, Mirko
and Migeon, Fr{\'e}d{\'e}ric
and Gleizes, Marie-Pierre
and Maurel, Christine
and Penserini, Loris
and Perini, Anna",
editor="Aldewereld, Huib
and Dignum, Virginia
and Picard, Gauthier",
title="A Goal-Oriented Approach for Modelling Self-organising MAS",
booktitle="Engineering Societies in the Agents World X",
year="2009",
publisher="Springer Berlin Heidelberg",

pages="33--48",
abstract="Autonomous software agents provide a promising solution to the needs of decentralised networked systems, able to adapt their behaviour in a complex and dynamically changing environment.",
isbn="978-3-642-10203-5"
}


@inproceedings{Qureshi2012towards,
 author = {Qureshi, Nauman A. and Jureta, Ivan J. and Perini, Anna},
 title = {Towards a Requirements Modeling Language for Self-adaptive Systems},
 booktitle = {Proceedings of the 18th International Conference on Requirements Engineering: Foundation for Software Quality},
 series = {REFSQ'12},
 year = {2012},
 isbn = {978-3-642-28713-8},
 location = {Essen, Germany},
 pages = {263--279},
 numpages = {17},
 doi = {10.1007/978-3-642-28714-5_24},
 acmid = {2239029},
 publisher = {Springer-Verlag},
 keywords = {requirements engineering, requirements modeling, self-adaptive systems},
} 

@inproceedings{Goldsby2008goalbased,
 author = {Goldsby, Heather J. and Sawyer, Pete and Bencomo, Nelly and Cheng, Betty H. C. and Hughes, Danny},
 title = {Goal-Based Modeling of Dynamically Adaptive System Requirements},
 booktitle = {Proceedings of the 15th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems},
 series = {ECBS '08},
 year = {2008},
 isbn = {978-0-7695-3141-0},
 pages = {36--45},
 numpages = {10},

 doi = {10.1109/ECBS.2008.22},
 acmid = {1396024},

 keywords = {model driven development, goal modeling, requirements engineering, dynamically adaptive systems},
} 

@inproceedings{Cheng2009agoalbased,
 author = {Cheng, Betty H. and Sawyer, Pete and Bencomo, Nelly and Whittle, Jon},
 title = {A Goal-Based Modeling Approach to Develop Requirements of an Adaptive System with Environmental Uncertainty},
 booktitle = {Proceedings of the 12th International Conference on Model Driven Engineering Languages and Systems},
 series = {MODELS '09},
 year = {2009},
 isbn = {978-3-642-04424-3},
 location = {Denver, CO},
 pages = {468--483},
 numpages = {16},

 doi = {10.1007/978-3-642-04425-0_36},
 acmid = {1691369},
 publisher = {Springer-Verlag},
 keywords = {Requirements engineering, dynamically adaptive systems, goal models, uncertainty},
} 





@inproceedings{Achour,
 author = {Qi, Zichao and Long, Fan and Achour, Sara and Rinard, Martin},
 title = {An Analysis of Patch Plausibility and Correctness for Generate-and-validate Patch Generation Systems},
 booktitle = {International Symposium on Software Testing and Analysis},
 year = {2015},
 isbn = {978-1-4503-3620-8},
 location = {Baltimore, MD, USA},
 pages = {24--36},
 numpages = {13},
 acmid = {2771791}
} 

@article{Yi2017ACS,
  title={A correlation study between automated program repair and test-suite metrics},
  author={Jooyong Yi and Shin Hwei Tan and Sergey Mechtaev and Marcel B{\"o}hme and Abhik Roychoudhury},
  journal={Empirical Software Engineering},
  year={2017},
  pages={1-32}
}

@article{2014kwoncloudrefactoring,
 author = {Kwon, Young-Woo and Tilevich, Eli},
 title = {Cloud Refactoring: Automated Transitioning to Cloud-based Services},
 journal = {Automated Software Eng.},
 issue_date = {September 2014},
 volume = {21},
 number = {3},
 month = sep,
 year = {2014},
 issn = {0928-8910},
 pages = {345--372},
 numpages = {28},
 acmid = {2631561},
 publisher = {Kluwer Academic Publishers},

 keywords = {Cloud computing, Fault-tolerance, Program transformation, Refactoring, Service extraction, Services},
} 


@incollection{cheng2009softwareengineering,
 author = {Cheng, Betty H. and Lemos, Rog{\'e}rio and Giese, Holger and Inverardi, Paola and Magee, Jeff and Andersson, Jesper and Becker, Basil and Bencomo, Nelly and Brun, Yuriy and Cukic, Bojan and Marzo Serugendo, Giovanna and Dustdar, Schahram and Finkelstein, Anthony and Gacek, Cristina and Geihs, Kurt and Grassi, Vincenzo and Karsai, Gabor and Kienle, Holger M. and Kramer, Jeff and Litoiu, Marin and Malek, Sam and Mirandola, Raffaela and M\"{u}ller, Hausi A. and Park, Sooyong and Shaw, Mary and Tichy, Matthias and Tivoli, Massimo and Weyns, Danny and Whittle, Jon},
 chapter = {Software Engineering for Self-Adaptive Systems: A Research Roadmap},
 title = {Software Engineering for Self-Adaptive Systems},
 booktitle = {Software Engineering for Self-Adaptive Systems},
 editor = {Cheng, Betty H. and Lemos, Rog{\'e}rio and Giese, Holger and Inverardi, Paola and Magee, Jeff},
 year = {2009},
 isbn = {978-3-642-02160-2},
 pages = {1--26},
 numpages = {26},
 acmid = {1573858},
 publisher = {Springer-Verlag},

} 

@incollection{delemos2011softwareengineering,
  TITLE = {{Software Engineering for Self-Adaptive Systems: A Second Research Roadmap}},
  AUTHOR = {De Lemos, Rog{\'e}rio and Giese, Holger and Muller, Hausi A. and Shaw, Mary and Andersson, Jesper and Baresi, Luciano and Becker, Basil and Bencomo, Nelly and Brun, Yuriy and Cukic, Bojan and Desmarais, Ron and Dustdar, Schahram and Engels, Gregor and Geihs, Kurt and Goeschka, Karl M. and Gorla, Alessandra and Grassi, Vincenzo and Inverardi, Paola and Karsai, Gabor and Kramer, Jeff and Litoiu, Marin and Lopes, Antonia and Magee, Jeff and Malek, Sam and Mankovskii, Serge and Mirandola, Raffaela and Mylopoulos, John and Nierstrasz, Oscar and Pezze, Mauro and Prehofe, Christian and Sch{\"a}fer, Wilhelm and Schlichting, Rick and Schmerl, Bradley and Smith, Dennis B. and Sousa, João P. and Tamura, Gabriel and Tahvildari, Ladan and Villegas, Norha M. and Vogel, Thomas and Weyns, Danny and Wong, Kenny and Wuttke, Jochen},
  BOOKTITLE = {{Software Engineering for Self-Adaptive Systems}},
  EDITOR = {De Lemos, Rog{\'e}rio and Giese, Holger and M{\"u}ller, Hausi and Shaw, Mary},
  PUBLISHER = {{Springer}},
  SERIES = {Dagstuhl Seminar Proceedings},
  VOLUME = {7475},
  PAGES = {1-26},
  YEAR = {2013},
  KEYWORDS = {Software engineering for self-adaptive systems ; design spaces ; verification and validation ; processes ; decentralization},
  HAL_ID = {inria-00638157},
  HAL_VERSION = {v1},
}

@inproceedings{jones2005tarantula,
  author = "James A. Jones and Mary Jean Harrold",
  title = "Empirical evaluation of the {Tarantula} automatic fault-localization technique",
  booktitle = "Automated Software Engineering",
  pages = "273--282",
  year = 2005
}

@INPROCEEDINGS{Jones2002visualization,
  author = {Jones, James A. and Harrold, Mary Jean and Stasko, John},
  title = {Visualization of test information to assist fault localization},
  booktitle = {International Conference on Software Engineering},
  year = {2002},
  pages = {467--477}
}

@article{Vesey1985,
  author = "I. Vesey",
  title = "Expertise in debugging computer programs",
  journal = "International Journal of Man-Machine Studies",
  volume = "23",
  number = "5",
  pages = "459--494",
  year = "1985"
}


@article{BallVis1986,
  author = "Thomas Ball and Stephen Eick",
  title = "Software visualization in the large",
  journal = "Computer",
  volume = "29",
  number = "4",
  pages = "33--43",
  month = "April",
  year = "1996"
}

@inproceedings{wopdpanel,
  title = "Panel: Program Debugging: Transitioning from Research to Practice",
  year = 2013,
  booktitle = "International Workshop on Program Debugging"
}

@inproceedings{satopaa2011finding,
  title={Finding a "Kneedle" in a Haystack: Detecting Knee Points in System Behavior},
  author={Satop{\"a}{\"a}, Ville and Albrecht, Jeannie and Irwin, David and Raghavan, Barath},
  booktitle={2011 31st International Conference on Distributed Computing Systems Workshops},
  pages={166--171},
  year={2011},
  organization={IEEE}
}

@inproceedings{miao2012identifying,
  title={Identifying coincidental correctness for fault localization by clustering test cases.},
  author={Miao, Yi and Chen, Zhenyu and Li, Sihan and Zhao, Zhihong and Zhou, Yuming},
  booktitle={SEKE},
  year = 2012,
  pages = {267--272}
}

@article{Wong2016survey,
 author = {Wong, W. Eric and Gao, Ruizhi and Li, Yihao and Abreu, Rui and Wotawa, Franz},
 title = {A Survey on Software Fault Localization},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {August 2016},
 volume = {42},
 number = {8},
 month = aug,
 year = {2016},
 issn = {0098-5589},
 pages = {707--740},
 numpages = {34},

 doi = {10.1109/TSE.2016.2521368},
 acmid = {3012182},


} 

@inproceedings{AutoHelp,
  author = "Chris Parnin and Alessandro Orso",
  title = "Are Automated Debugging Techniques Actually Helping Programmers?",
  year = 2011,
  booktitle = "International Symposium on Software Testing and Analysis",
  pages = "199--209"
}

@inproceedings{Kochhar2016,
 author = {Kochhar, Pavneet Singh and Xia, Xin and Lo, David and Li, Shanping},
 title = {Practitioners' Expectations on Automated Fault Localization},
 booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
 series = {ISSTA 2016},
 year = {2016},
 isbn = {978-1-4503-4390-9},
 location = {Saarbr\&\#252;cken, Germany},
 pages = {165--176},
 numpages = {12},

 doi = {10.1145/2931037.2931051},
 acmid = {2931051},
 publisher = {ACM},

 keywords = {Empirical Study, Fault Localization, Practitioners\&\#039; Expectations},
} 

@inproceedings{Qi2013using,
 author = {Qi, Yuhua and Mao, Xiaoguang and Lei, Yan and Wang, Chengsong},
 title = {Using Automated Program Repair for Evaluating the Effectiveness of Fault Localization Techniques},
 booktitle = {International Symposium on Software Testing and Analysis},
 year = {2013},
 isbn = {978-1-4503-2159-4},
 location = {Lugano, Switzerland},
 pages = {191--201},
 numpages = {11},

 doi = {10.1145/2483760.2483785},
 acmid = {2483785},
 keywords = {Fault localization, automated debugging, automated program repair},
} 
@inproceedings{SouzaAwareness,
 author = {Silva Souza, V\'{\i}tor E. and Lapouchnian, Alexei and Robinson, William N. and Mylopoulos, John},
 title = {Awareness Requirements for Adaptive Systems},
 booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
 year = {2011},
 pages = {60--69}
} 


@inproceedings{deng2013empirical,
				author={L. Deng and J. Offutt and N. Li},
				booktitle={International Conference on Software Testing, Verification and Validation},
				title={Empirical Evaluation of the Statement Deletion Mutation Operator},
				year={2013},
				pages={84-93},
				doi={10.1109/ICST.2013.20},
				ISSN={2159-4848},
				month={March}
}

@inproceedings{delamaro2014designing,
  title={Designing deletion mutation operators},
  author={Delamaro, Marcio Eduardo and Offutt, Jeff and Ammann, Paul},
  booktitle={International Conference on Software Testing, Verification and Validation},
  pages={11--20},
  year={2014}
}



@article{stvrcausereduce,
 author = {Groce, Alex and Alipour, Mohammad Amin and Zhang, Chaoqiang and Chen, Yang and Regehr, John},
 title = {Cause Reduction: Delta Debugging, Even Without Bugs},
 journal = {Journal of Software Testing, Verification, and Reliability},
 issue_date = {January 2016},
 volume = {26},
 number = {1},
 month = jan,
 year = {2016},
 issn = {0960-0833},
 pages = {40--68},
 numpages = {29},

 doi = {10.1002/stvr.1574},
 acmid = {2885518},
 publisher = {John Wiley and Sons Ltd.},

 keywords = {code coverage, delta debugging, regression testing, software testing, test case minimization},
} 

@inproceedings{icst2014,
  title={Cause Reduction for Quick Testing},
  author={Groce, Alex and Alipour, Mohammad Amin and Zhang, Chaoqiang and Chen, Yang and Regehr, John},
  booktitle={IEEE International Conference on Software Testing, Verification and Validation},
  year={2014},
  pages={243-252},
}

@misc{hammacherbachthesis2008,
    title = "Design and Implementation of an Efficient Dynamic Slicer for {Java}",
    author = "Clemens Hammacher",
    year = "2008",
    month = nov,
    howpublished = "Bachelor's Thesis",
    school = "Saarland University",
}

@inproceedings{bodden2012inter,
  title={Inter-procedural data-flow analysis with ifds/ide and soot},
  author={Bodden, Eric},
  booktitle={Proceedings of the ACM SIGPLAN International Workshop on State of the Art in Java Program analysis},
  pages={3--8},
  year={2012},
  organization={ACM}
}

@inproceedings{ValleeRai1999soot,
 author = {Vall{\'e}e-Rai, Raja and Co, Phong and Gagnon, Etienne and Hendren, Laurie and Lam, Patrick and Sundaresan, Vijay},
 title = {Soot - a Java Bytecode Optimization Framework},
 booktitle = {Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research},
 series = {CASCON '99},
 year = {1999},
 location = {Mississauga, Ontario, Canada},
 pages = {13--},

 acmid = {782008},
 publisher = {IBM Press},
} 

@article{einarsson2008survivor,
  title={A survivor’s guide to Java program analysis with soot},
  author={Einarsson, Arni and Nielsen, Janus Dam}
}

@phdthesis{arvind2006slicing,
  title={Slicing of Java programs using the Soot framework},
  author={Arvind, D and Shankar, Priti},
  year={2006},
  school={Master’s thesis, Indian Institute of Science}
}

@inproceedings{Zhang2003precise,
 author = {Zhang, Xiangyu and Gupta, Rajiv and Zhang, Youtao},
 title = {Precise Dynamic Slicing Algorithms},
 booktitle = {Proceedings of the 25th International Conference on Software Engineering},
 series = {ICSE '03},
 year = {2003},
 isbn = {0-7695-1877-X},
 location = {Portland, Oregon},
 pages = {319--329},
 numpages = {11},

 acmid = {776855},
 publisher = {IEEE Computer Society},

} 

@inproceedings{Treffer2014dynamic,
 author = {Treffer, Arian and Uflacker, Matthias},
 title = {Dynamic Slicing with Soot},
 booktitle = {Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis},
 series = {SOAP '14},
 year = {2014},
 isbn = {978-1-4503-2919-4},
 location = {Edinburgh, United Kingdom},
 pages = {1--6},
 numpages = {6},

 doi = {10.1145/2614628.2614631},
 acmid = {2614631},
 publisher = {ACM},

 keywords = {debugging, dynamic analysis, slicing, static analysis},
} 



@inproceedings{schuler2011assessing,
				author={D. Schuler and A. Zeller},
				booktitle={2011 Fourth IEEE International Conference on Software Testing, Verification and Validation},
				title={Assessing Oracle Quality with Checked Coverage},
				year={2011},
				pages={90-99},
				keywords={program slicing;program testing;software metrics;software quality;assessing oracle quality;checked coverage;coverage metrics;covered statements;dynamic slice;mutation testing;open-source projects;Focusing;Java;Libraries;Measurement;Open source software;Testing;coverage metrics;dynamic slicing;mutation testing;test suite quality},
				doi={10.1109/ICST.2011.32},
				ISSN={2159-4848},
				month={March}
}














@techreport{demillo1983program,
  abstract = {Program Mutation is a method of assessing the quality of computer program test data. Test data is said to be adequate if a program behaves correctly on the data but incorrect programs fail. A mutation score assesses how close a given test is to being adequate. This report describes the status of research in program mutation. Topics covered include theoretical results, error classification, experimental studies, implementation strategies for a mutation analyzer, and field studies.},
  author = {DeMillo, RA},
  institution = {Georgia Institute of Technology},
  title = {{Program Mutation: An Approach to Software Testing.}},
  year = {1983}
}

@inproceedings{woodward1988weak,
  title={From weak to strong, dead or alive? an analysis of some mutation testing issues},
  author={Woodward, MR and Halewood, K},
  booktitle=stva,
  pages={152--158},
  year={1988},
  organization={IEEE}
}

@article{offutt1989thecoupling,
  annote = {Morell says that it is not clear what simple faults and complex faults are.},
  author = {Offutt, A Jefferson},
  journal = acmsen,
  isbn = {0897913426},
  volume = {14},
  number = {8},
  month = nov,
  issn = {0163-5948},
  doi = {10.1145/75309.75324},
  acmid = {75324},
  publisher = {ACM},
  keywords = {mutation,unread},
  pages = {131--140},
  title = {{The Coupling Effect : Fact or Fiction?}},
  year = {1989}
}







@inproceedings{untch1993mutation,
  abstract = {Mutation analysis is a powerful technique for assessing and improving the quality of    test data used to unit test software. Unfortunately, current automated mutation analysis systems su er from severe performance problems. This paper presents a new method for performing mutation       analysis that uses program schemata to encode all mutants for a program into one metaprogram, which is subsequently compiled and run at speeds substantially higher than achieved by previous           interpretive sys- tems. Preliminary performance improvements of over 300\% are reported. This       method has the additional advantages of being easier to implement than interpretive systems, being  simpler to port across a wide range of hardware and software platforms, and using the same compiler and run-time support system that is used during development and or deployment.},
  author = {Untch, Roland H and Offutt, A Jefferson and Harrold, Mary Jean},
  keywords = {fault-based testing,mutation,mutation analysis,program schemata,software testing,       unread},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  title = {{Mutation Analysis Using Mutant Schemata}},
  year = {1993}
}

@article{frankl1993provable,
  title={Provable improvements on branch testing},
  author={Frankl, Phyllis G. and Weyuker, Elaine J.},
  journal= ieeetse,
  volume={19},
  number={10},
  pages={962--975},
  year={1993},
  publisher={IEEE}
}


1994
@inproceedings{hutchins1994experiments,
  author = {Hutchins, Monica and Foster, Herb and Goradia, Tarak and Ostrand, Thomas},
  keywords = {mutation,unread},
  booktitle=icse,
  pages = {191--200},
  title = {{Experiments on the Effectiveness of Criteria and Controlflow-Based Test Adequacy}},
  year = {1994}
}
@article{mathur1994empirical,
  title={An empirical comparison of data flow and mutation-based test adequacy criteria},
  author={Mathur, Aditya P and Wong, W Eric},
  journal=stvr,
  volume={4},
  number={1},
  pages={9--31},
  year={1994},
  publisher={Wiley Online Library}
}

1995

@phdthesis{untch1995schema,
  author = {Untch, Roland H},
  keywords = {mutation},
  number = {December},
  title = {{Schema-Based Mutation Analysis: A New Test Data Adequacy Assessment Method}},
  year = {1995}
}

@inproceedings{offutt1995semantic,
  author = {Offutt, A Jefferson and Hayes, J Huffman},
  keywords = {fault seeding,faults and failures,mutation,unread},
  booktitle=acmissta,
  pages = {1--12},
  title = {{A Semantic Model of Program Faults}},
  year = {1996}
}

@article{demillo1995some,
  title={Some critical remarks on a hierarchy of fault-detecting abilities of test methods [and reply]},
  author={DeMillo, Richard A and Mathur, Aditya P and Wong, W Eric and Frankl, PG and Weyuker, EJ},
  journal=ieeetse,
  volume={21},
  number={10},
  pages={858--863},
  year={1995},
  publisher={IEEE}
}

@article{wong1995reducing,
  author = {Wong, Weichen Eric and Mathur, Aditya P},
  keywords = {mutation,unread},
  journal = jss,
  number = {94},
  pages = {185--196},
  title = {Reducing the Cost of Mutation Testing: An Empirical Study},
  tag={printed},
  volume = {1212},
  year = {1995},
}

@article{offutt1996experimental,
  abstract = {Mutation testing is a technique for unit testing software that although powerful is computationally expensive. The principal expense of mutation is that many variants of the test program called mutants must be repeatedly executed. This paper quantifies the expense of mutation in terms of the number of mutants that are created, then proposes and evaluates a technique that reduces the numberof mutants by an order of magnitude. Selective mutation reduces the cost of mutation testing by reducing the numberof mutants. This paper reports experimental results that compare selective mutation testing with standard or non selective mutation testing and results that quantify the savings achieved by selective mutation testing. The results support the hypothesis that selective mutation is almost as strong as non selective mutation; in experimental trials selective mutation provides almost the same coverage as non selective mutation, with a four fold or more reduction in the number of mutants.},
  annote = {ES-Selective},
  author = {Offutt, A Jefferson and Lee, Ammei and Rothermel, Gregg and Untch, Roland H and Zapf, Christian},
  journal = tosem,
  keywords = {mutation,unread},
  pages = {1--23},
  title = {{An Experimental Determination of Sufficient Mutant Operators}},
  tag={printed},
  year = {1996}
}

@techreport{offutt1996subsumption,
  author = {Offutt, AJ and Voas, JM},
  keywords = {a family of testing,and that each branch,branch testing,condition coverage,condition coverage testing is,include a variety of,including,is executed,mutation testing,mutation testing is,of con-,on the logical ow,requirements,software testing,subsumption,techniques that are based,that each statement in,the condition coverage techniques,the program is executed,trol through a program},
  pages = {1--14},
  institution={GMU},
  title = {{Subsumption of condition coverage techniques by mutation testing}},
  year = {1996}
}

@inproceedings{daran1996software,
  author = {Daran, Muriel and Thevenod-Fosse, Pascale},
  booktitle = acmissta,
  doi = {10.1145/229000.226313},
  isbn = {0897917871},
  keywords = {mutation,unread},
  pages = {158--171},
  publisher = {ACM Press},
  title = {{Software Error Analysis: A Real Case Study Involving Real Faults and Mutations}},
  tag={printed},
  year = {1996}
}

@article{offutt1998automatically,
  abstract = {Mutation testing is a technique for testing software units that has great potential for improving the quality of testing, and thereby increasing our ability to assure the high reliability of critical software. It will be shown that recent advances in mutation research have brought a     practical mutation testing system closer to reality. One recent advance is a partial solution to    the problem of automatically detecting equivalent mutant programs. Equivalent mutants are currently detected by hand, which makes it very expensive and time-consuming. The problem of detecting        equivalent mutants is a speci c instance of a more general problem, commonly called the feasible    path problem, which says that for certain structural testing criteria some of the test requirements are infeasible in the sense that the semantics of the program imply that no test case satis es the  test requirements. Equivalent mutants, unreachable statements in path testing techniques, and       infeasible DU-pairs in data ow testing are all instances of the feasible path problem. This paper   presents a technique that uses mathematical constraints, originally developed for test data         generation, to automatically detect some equivalent mutants and infeasible paths.},
  author = {Offutt, A Jefferson and Pan, Jie},
  journal = stvr,
  keywords = {constraints,feasible path analysis,mutation,mutation testing,software testing,testing,  unread},
  number = {3},
  pages = {165--192},
  title = {{Automatically Detecting Equivalent Mutants and Infeasible Paths}},
  volume = {7},
  year = {1998}
}

@article{mresa1999efficiency,
  abstract = {This paper investigates the mutation scores achieved by individual operators of the Mothra mutation system and their associated costs in order to determine themost efficient operators. The cost ofmutation analysis includes both test set generation and equivalent mutant detection. The score and cost information is then used as a heuristic for choosing a subset of the operators for use in efficient selective mutation testing. Experiments were performed using a sample of 11 programs and a number of test sets for each program. The results show that the use of efficient operators can provide significant efficiency gains for selective mutation if the acceptable mutation score is not very close to one. When mutation scores very close to one are required, a randomly selected proportion of the mutants provides a more efficient strategy than a subset of efficient operators. KEYWORDS:},
  author = {Mresa, Elfurjani S and Bottaci, Leonardo},
  keywords = {efficiency,mutation,mutation operators,selective mutation testing,software testing,unread},
  journal=stvr,
  pages = {1--22},
  title = {{Efficiency of mutation operators and selective mutation strategies : An empirical study}},
  year = {1999}
}

2000

@article{wah2000atheoretical,
  author = {Wah, K S How Tai},
  keywords = {alternate,coupled,coupling ratio,degeneracy structure,double-fault,fault coupling,fault-based testing,mutation,proper,single-fault,test set,unread},
  journal=stvr,
  number = {March 1999},
  pages = {3--45},
  title = {{A theoretical study of fault coupling}},
  year = {2000}
}

@inproceedings{offutt2000uniting,
  abstract = {Mutation testing is a powerful but computationally expensive technique for unit testing software. This expense has prevented mutation from becoming widely used in practical situations, but recent engineering advances have given us techniques and algorithms for significantly reducing the cost of mutation testing. These techniques include a new algorithmic execution technique called weak mutation, a reduction technique called selective mutation, heuristics for detecting equivalent mutants and algorithms for automatic test data generation. This paper reviews experimentation with these advances and outlines a design for a system that will approximate mutation, but in a way that will be accessible to every day programmers. We envision a system to which a programmer can submit a program unitand get back a set of input/output pairs that are guaranteed to form an effective test of the unit by being close to mutation adequate. We believe this system could be efficient enough to be adopted by leading-edge software developers. Full automation in unit testing has the potential to dramatically change the economic balance between testing and development by reducing the cost of testing from the major part of total development cost to a fraction.},
  author = {Offutt, A Jefferson and Untch, Roland H},
  booktitle = {Mutation 2000: Mutation Testing in the Twentieth and the Twenty First Centuries},
  keywords = {mutation,unread},
  title = {{Mutation 2000: Uniting the Orthogonal}},
  tag={printed},
  year = {2000}
}
2001

@inproceedings{elbaum2001impact,
  title={The impact of software evolution on code coverage information},
  author={Elbaum, Sebastian and Gable, David and Rothermel, Gregg},
  booktitle=ieeeicsm,
  pages={170},
  tag={printed},
  year={2001},
  organization={IEEE Computer Society}
}

@article{barbosa2001toward,
  title={Toward the determination of sufficient mutant operators for C†},
  author={Barbosa, Ellen Francine and Maldonado, Jos{\'e} Carlos and Vincenzi, Auri Marcelo Rizzo},
  journal={Software Testing, Verification and Reliability},
  volume={11},
  number={2},
  pages={113--136},
  year={2001},
  tag={printed},
  publisher={Wiley Online Library}
}

@article{maldonado2001evaluating,
  author = {Maldonado, Jose Carlos and Barbosa, Ellen Francine and Vincenzi, Auri Marcelo Rizzo and Delamaro, Marcio Eduardo},
  keywords = {mutation,unread},
  journal= {{Mutation Testing for the New Century}},
  title = {{Evaluating N-selective mutation for C programs}},
  tag={printed},
  year = {2001}
}

2002


@inproceedings{munson2002toward,
  title={Toward a quantifiable definition of software faults},
  author={Munson, John C and Nikora, Allen P},
  booktitle=issre,
  pages={388--395},
  year={2002},
  organization={IEEE}
}

2003

@inproceedings{duraes2003definition,
  title={Definition of software fault emulation operators: A field data study},
  author={Duraes, Joao and Madeira, Henrique},
  booktitle={International Conference on Dependable Systems and Networks},
  pages={105--114},
  year={2003},
  organization={IEEE}
}

@article{wah2003ananalysis,
  abstract = {The focus in mutation testing is on the elimination of ?rst-order mutants. It is widely believed that there is a coupling e?ect between ?rst-order and higher-order mutants such that a test set that kills the former would be expected to kill the latter too; it follows that, if the belief is correct, there is no need whatsoever to bother with higher-order mutants. It turns out, in practice, that most higher-order mutants do get killed by such a test set, though a few somehow manage to survive. This is the ?rst of two papers dealing with the coupling e?ect from a theoretical standpoint. The overall results indicate that the hypothesis of a coupling e?ect is largely valid, provided the program is not too large; only a tiny proportion of higher-order mutants is expected to survive a test set that kills all ?rst-order mutants. The basis of the approach is that programs can be modelled as compositions of ?nite functions, the domain of which is assumed to be large. The problem is a complex one, so the present paper only considers the case where there is just one test data; the case where there are more than one test data is left to a second paper. The aim is not only to show that the coupling e?ect actually exists, but also to gain some understanding of the various factors underlying it.},
  author = {{How Tai Wah}, K.S.},
  doi = {10.1016/S0167-6423(03)00022-4},
  issn = {01676423},
  journal = scp,
  keywords = {alternate,coupling e ect,expected,fault size,function degeneracy,multi-fault,mutation,number of survivors,proper test set,single-fault,survival ratio,unread},
  month = aug,
  number = {2-3},
  pages = {119--161},
  title = {{An analysis of the coupling effect I: single test data}},
  volume = {48},
  year = {2003}
}


@article{ma2005mujava,
  title={MuJava: an automated class mutation system},
  author={Ma, Yu-Seung and Offutt, Jeff and Kwon, Yong Rae},
  journal=stvr,
  volume={15},
  number={2},
  pages={97--133},
  year={2005},
  publisher={Wiley Online Library}
}

@inproceedings{andrews2005mutation,
  title={Is mutation an appropriate tool for testing experiments?[software testing]},
  author={Andrews, James H and Briand, Lionel C and Labiche, Yvan},
  booktitle=icse,
  pages={402--411},
  year={2005},
  tag={printed},
  organization={IEEE}
}


@article{belli2006basic,
  abstract = {This paper attempts to subsume the existing great variety of mutation operations to   two basic operations, insertion and omission and their combinations. These basic operations are     applied to different elements of graph-based models of increasing representation power. A case      study applies the approach to these models for generating mutants of different features and         compares the fault detection capacity of the mutants generated. 1.},
  author = {Belli, Fevzi and Budnik, Christof J. and Wong, Weichen Eric},
  doi = {10.1109/MUTATION.2006.2},
  isbn = {0-7695-2897-X},
  journal = issrew,
  keywords = {mutation,unread},
  month = nov,
  pages = {9--9},
  publisher = {Ieee},
  title = {{Basic Operations for Generating Behavioral Mutants}},
  year = {2006}
}
@article{andrews2006using,
  title={Using mutation analysis for assessing and comparing testing coverage criteria},
  author={Andrews, James H and Briand, Lionel C and Labiche, Yvan and Namin, Akbar Siami},
  journal=ieeetse,
  volume={32},
  number={8},
  pages={608--624},
  year={2006},
  publisher={IEEE}
}

@inproceedings{kurtz2014mutant,
  author = {Robert Kurtz and Paul Ammann and Marcio Delamaro and Jeff Offutt and Lin Deng},
  title = {Mutant Subsumption Graphs},
  booktitle = mutationworkshop,
  tag={printed},
  year = {2014}
}


@inproceedings{namin2006finding,
  abstract = {A set of mutation operators is “sufficient” if it can be used for most purposes to replace a larger set. We describe in detail an experimental procedure for determining a set of suf- ficient C language mutation operators. We also describe several statistical analyses that determine sufficient subsets with respect to several different criteria, based on standard techniques for variable reduction.We have begun to carry out our experimental procedure on seven standard C subject programs. We present preliminary results that indicate that the procedure and analyses are feasible and yield useful information.},
  author = {Namin, Akbar Siami and Andrews, James H},
  booktitle = mutationworkshop,
  keywords = {MUTATION06,mutation,unread},
  title = {{Finding Sufficient Mutation Operators via Variable Reduction}},
  tag={printed},
  year = {2006}
}


2007
@inproceedings{bradbury2007comparative,
  title={Comparative assessment of testing and model checking using program mutation},
  author={Bradbury, Jeremy S and Cordy, James R and Dingel, Juergen},
  booktitle={Testing: Academic and Industrial Conference Practice and Research Techniques-MUTATION, 2007. TAICPART-MUTATION 2007},
  pages={210--222},
  year={2007},
  organization={IEEE}
}

2008
@inproceedings{guderlei2008benchmarking,
  title={Benchmarking testing strategies with tools from mutation analysis},
  author={Guderlei, Ralph and Just, Ren{\'e} and Schneckenburger, Christoph and Schweiggert, Franz},
  booktitle=icstw,
  pages={360--364},
  year={2008},
  organization={IEEE}
}


@misc{moore2008weak,
  author = {Ivan Moore},
  title = {Strong vs Weak Mutation Testing},
  howpublished = {\url{http://ivan.truemesh.com/archives/000571.html}},
  urldate = {2014-03-06}
}


@inproceedings{namin2008sufficient,
  abstract = {Mutants are automatically-generated, possibly faulty variants of programs. The mutation adequacy ratio of a test suite is the ratio of non-equivalent mutants it is able to identify to the total number of non-equivalent mutants. This ratio can be used as a measure of test effectiveness. However, it can be expensive to calculate, due to the large number of different mutation operators that have been proposed for generating the mutants. In this paper, we address the problem of finding a small set of mutation operators which is still sufficient for measuring test ef- fectiveness. We do this by defining a statistical analysis procedure that allows us to identify such a set, together with an associated lin- ear model that predicts mutation adequacy with high accuracy. We confirm the validity of our procedure through cross-validation and the application of other, alternative statistical analyses. Categories},
  author = {Namin, Akbar Siami and Andrews, James H and Murdoch, Duncan J},
  booktitle = icse,
  isbn = {9781605580791},
  keywords = {mutation,mutation analysis,testing effectiveness,unread},
  pages = {351--360},
  title = {{Sufficient Mutation Operators for Measuring Test Effectiveness}},
  tag={printed},
  year = {2008}
}

@book{ammann2008ist,
  author = {Ammann, Paul and Offutt, Jeff},
  title = {Introduction to Software Testing},
  year = {2008},
  isbn = {0521880386, 9780521880381},
  edition = {1},
  publisher = {Cambridge University Press},
} 

@inproceedings{jia2008constructing,
  title={Constructing subtle faults using higher order mutation testing},
  author={Jia, Yue and Harman, Mark},
  booktitle= ieeescam,
  pages={249--258},
  year={2008},
  tag={printed},
  organization={IEEE}
}

@inproceedings{rajan2008theeffect,
  author = {Rajan, Ajitha and Whalen, Michael W. and Heimdahl, Mats P.E.},
  title = {The Effect of Program and Model Structure on Mc/Dc Test Adequacy Coverage},
  booktitle = {Proceedings of the 30th International Conference on Software Engineering},
  series = icse,
  year = {2008},
  isbn = {978-1-60558-079-1},
  location = {Leipzig, Germany},
  pages = {161--170},
  numpages = {10},
  doi = {10.1145/1368088.1368111},
  acmid = {1368111},
  publisher = {ACM},

  keywords = {structural coverage metrics},
}

2009

@article{pan2009toward,
  title={Toward an understanding of bug fix patterns},
  author={Pan, Kai and Kim, Sunghun and Whitehead Jr, E James},
  journal={Empirical Software Engineering},
  volume={14},
  number={3},
  pages={286--315},
  tag={printed},
  year={2009},
  publisher={Springer}
}


@article{jia2009higher,
  abstract = {This paper introduces a new paradigm for Mutation Testing, which we call Higher Order Mutation Testing (HOM Testing). Traditional Mutation Test- ing considers only first order mutants, created by the injection of a single fault. Often these first order mutants denote trivial faults that are easily killed. Higher order mutants are created by the insertion of two or more faults. The paper introduces the concept of a subsuming HOM; one that is harder to kill than the first order mutants from which it is constructed. By definition, subsuming HOMs denote subtle fault combinations. The paper reports the results of an empirical study of HOM Testing using ten pro- grams, including several non trivial realâworld subjects for which test suites are available.},
  author = {Jia, Yue and Harman, Mark},
  doi = {10.1016/j.infsof.2009.04.016},
  issn = {09505849},
  journal = ist,
  keywords = {higher order mutant,mutation,mutation testing,unread},
  month = oct,
  number = {10},
  pages = {1379--1393},
  publisher = {Elsevier B.V.},
  title = {{Higher Order Mutation Testing}},
  volume = {51},
  year = {2009}
}
@inproceedings{li2009experimental,
  title={An experimental comparison of four unit test criteria: Mutation, edge-pair, all-uses and prime path coverage},
  author={Li, Nan and Praphamontripong, Upsorn and Offutt, Jeff},
  booktitle=icstw,
  pages={220--229},
  year={2009},
  organization={IEEE}
}

@inproceedings{untch2009onreduced,
  abstract = {Mutation analysis evaluates the quality of a test suite based on its ability to reveal simple faults, termed mutations, in- jected in the program under test. Unfortunately, the need to execute many slightly different versions, or mutants, of a program makes mutation analysis a computationally expen- sive technique. This paper reports on a promising approach that reduces the cost of mutation analysis by reducing the number of mutants that need to be executed.},
  author = {Untch, Roland H},
  booktitle = acmse,
  isbn = {9781605584218},
  keywords = {constrained mutation,mutation,mutation analysis,reduced neighborhood mutation,reviewed,software testing,sufficient mutant operators,unread},
  pages = {1--4},
  title = {{On reduced neighborhood mutation analysis using a single mutagenic operator}},
  year = {2009}
}

@inproceedings{namin2009theinfluence,
  author = {Namin, Akbar Siami and St, Pine and Andrews, James H},
  booktitle = acmissta,
  isbn = {9781605583389},
  keywords = {coverage criteria,mutation,statistical analysis,unread},
  pages = {57--67},
  title = {{The Influence of Size and Coverage on Test Suite}},
  year = {2009}
}

@inproceedings{debroy2009insights,
  title={Insights on fault interference for programs with multiple bugs},
  author={Debroy, Vidroha and Wong, W Eric},
  booktitle=issre,
  pages={165--174},
  year={2009},
  organization={IEEE}
}

@inproceedings{Debroy2010using,
 author = {Debroy, Vidroha and Wong, W. Eric},
 title = {Using Mutation to Automatically Suggest Fixes for Faulty Programs},
 booktitle = {Proceedings of the 2010 Third International Conference on Software Testing, Verification and Validation},
 series = {ICST '10},
 year = {2010},
 isbn = {978-0-7695-3990-4},
 pages = {65--74},
 numpages = {10},
 doi = {10.1109/ICST.2010.66},
 acmid = {1828445},
 publisher = {IEEE Computer Society},
 keywords = {program debugging, mutation, fault localization, fault-fixing, software testing},
} 

@inproceedings{Nguyen2013semfix,
 author = {Nguyen, Hoang Duong Thien and Qi, Dawei and Roychoudhury, Abhik and Chandra, Satish},
 title = {{SemFix:} Program Repair via Semantic Analysis},
 booktitle = {International Conference on Software Engineering},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 location = {San Francisco, CA, USA},
 pages = {772--781},
 numpages = {10},
 acmid = {2486890},

} 


@inproceedings{Kim2013automatic,
 author = {Kim, Dongsun and Nam, Jaechang and Song, Jaewoo and Kim, Sunghun},
 title = {Automatic Patch Generation Learned from Human-written Patches},
 booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
 series = {ICSE '13},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 location = {San Francisco, CA, USA},
 pages = {802--811},
 numpages = {10},
 acmid = {2486893},


} 

@inproceedings{Dallmeier2009generating,
 author = {Dallmeier, Valentin and Zeller, Andreas and Meyer, Bertrand},
 title = {Generating Fixes from Object Behavior Anomalies},
 booktitle = {Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE '09},
 year = {2009},
 isbn = {978-0-7695-3891-4},
 pages = {550--554},
 numpages = {5},

 doi = {10.1109/ASE.2009.15},
 acmid = {1747554},
 publisher = {IEEE Computer Society},
 keywords = {debugging, fixing, object usage patterns},
} 



@inproceedings{tan2015relifix,
 author = {Tan, Shin Hwei and Roychoudhury, Abhik},
 title = {Relifix: Automated Repair of Software Regressions},
 booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 1},
 series = {ICSE '15},
 year = {2015},
 isbn = {978-1-4799-1934-5},
 location = {Florence, Italy},
 pages = {471--482},
 numpages = {12},
 acmid = {2818813},


} 

@inproceedings{Long2016automatic,
 author = {Long, Fan and Rinard, Martin},
 title = {Automatic Patch Generation by Learning Correct Code},
 booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '16},
 year = {2016},
 isbn = {978-1-4503-3549-2},
 location = {St. Petersburg, FL, USA},
 pages = {298--312},
 numpages = {15},
 doi = {10.1145/2837614.2837617},
 acmid = {2837617},
 publisher = {ACM},
 keywords = {Code correctness model, Learning correct code, Program repair},
} 

@INPROCEEDINGS{long2016searchspace, 
author={F. Long and M. Rinard}, 
booktitle={International Conference on Software Engineering}, 
title={An Analysis of the Search Spaces for Generate and Validate Patch Generation Systems}, 
year={2016}, 
volume={}, 
number={}, 
pages={702-713}, 
keywords={program diagnostics;software maintenance;automatic patch generation systems;SPR;Prophet;program repair;Benchmark testing;Space exploration;Systematics;Software;Software engineering;Scalability;Conferences;Program repair;Patch generation;Search space}, 
doi={10.1145/2884781.2884872}, 
ISSN={1558-1225}, 
month={May},}

@INPROCEEDINGS{le2016history, 
author={X. B. D. Le and D. Lo and C. L. Goues}, 
booktitle={2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)}, 
title={History Driven Program Repair}, 
year={2016}, 
volume={1}, 
number={}, 
pages={213-224}, 
keywords={Java;data mining;mathematical operators;program debugging;program testing;random processes;search problems;software maintenance;APR techniques;Java programs;automated program repair techniques;bug fix pattern mining;buggy program;fix candidates;history driven program repair;multicore cloud environment;mutation operators;random search process;Computer bugs;Data mining;History;Java;Maintenance engineering;Software;Testing;Automated Program Repair;Graph Mining;Mutation Testing}, 
doi={10.1109/SANER.2016.76}, 
ISSN={}, 
month={March},}

@inproceedings{schuler2009javalanche,
  author = {Schuler, David and Zeller, Andreas},
  title = {Javalanche: Efficient Mutation Testing for Java},
  booktitle = fse,
  series = {ESEC/FSE '09},
  year = {2009},
  isbn = {978-1-60558-001-2},
  location = {Amsterdam, The Netherlands},
  pages = {297--298},
  numpages = {2},
  doi = {10.1145/1595696.1595750},
  acmid = {1595750},
  publisher = {ACM},
  keywords = {mutation testing},
}

@article{polo2009decreasing,
  title={Decreasing the cost of mutation testing with second-order mutants},
  author={Polo, Macario and Piattini, Mario and Garc{\'\i}a-Rodr{\'\i}guez, Ignacio},
  journal={Software Testing, Verification and Reliability},
  volume={19},
  number={2},
  pages={111--131},
  year={2009},
  publisher={Wiley Online Library}
}

2010

@inproceedings{kintis2010evaluating,
  title={Evaluating mutation testing alternatives: A collateral experiment},
  author={Kintis, Marinos and Papadakis, Mike and Malevris, Nicos},
  booktitle={Software Engineering Conference (APSEC), 2010 17th Asia Pacific},
  pages={300--309},
  year={2010},
  organization={IEEE}
}


@article{zhang2010isoperator,
  annote = {Compares random selection of mutants to operator based selection. None of the operator based selection methods can outperform random selection of mutants.
    Two step random selection- First pick a mutation operator
      - Second pick a mutant generated by it.
      - Subject programs are simens programs (7)
      T: Selection technique, choosing T out of A mutants
      ti is a test suite that can kill all in T
      Eff(T) = average(mut.noneq score in all A| forall ti in n)
      i.e ti is adequate for T
      Uses 108 mutantion operators from proteum
      - Selection technique for random: [50\%,75\%,100\%] * |Selected Muts|
      - No operator based selection is better than random selection when
      selecting same number of mutants.
  },
  author = {Zhang, Lu and Hou, Shan-shan and Hu, Jun-jue and Xie, Tao and Mei, Hong},
  isbn = {9781605587196},
  journal = jss,
  keywords = {mutation,mutation testing,printed,reviewed,test-adequacy criterion,unread},
  title = {{Is Operator-Based Mutant Selection Superior to Random Mutant Selection ?}},
  tag={printed},
  year = {2010}
}

@article{jia2010analysis,
  abstract = {Mutation Testing is a fault–based software testing technique that has been widely studied for over three decades. The literature on Mutation Testing has contributed a set of approaches, tools, developments and empirical results. This paper provides a comprehensive analysis and survey of Mutation Test- ing. The paper also presents the results of several development trend analyses. These analyses provide evidence that Mutation Testing techniques and tools are reaching a state of maturity and applicability, while the topic of Mutation Testing itself is the subject of increasing interest.},
  author = {Jia, Yue and Harman, Mark},
  keywords = {mutation,survey,unread},
  journal = ieeetse,
  pages = {1--31},
  title = {{An Analysis and Survey of the Development of Mutation Testing}},
  tag={printed},
  year = {2010}
}

@inproceedings{harman2010amanifesto,
  abstract = {We argue that higher order mutants are potentially better able to simulate real faults  and to reveal insights into bugs than the restricted class of first order mutants. The Mutation     Testing community has previously shied away from Higher Order Mutation Testing believing it to be   too expensive and therefore impractical. However, this paper argues that Search Based Software      Engineering can provide a solution to this apparent problem, citing results from recent work on     search based optimization techniques for constructing higher order mutants. We also present a       research agenda for the development of Higher Order Mutation Testing.},
  author = {Harman, Mark and Jia, Yue and Langdon, William B},
  booktitle = icstw,
  doi = {10.1109/ICSTW.2010.13},
  isbn = {978-1-4244-6773-0},
  keywords = {mutation,unread},
  month = apr,
  pages = {80--89},
  publisher = {Ieee},
  title = {{A Manifesto for Higher Order Mutation Testing}},
  year = {2010}
}

@article{belli2010model,
  author = {Belli, Fevzi and G\"{u}ler, Nevin and Hollmann, Axel},
  journal = advse,
  keywords = {1 introduction and related,basic mutation operators,bugs by comparing the,coupling    ef-,event sequence graphs,fect,goals of software testing,higher-order mutation analysis,is to       reveal defects,one of the major,software testing,work},
  pages = {164--173},
  title = {{Model-Based Higher-Order Mutation Analysis}},
  year = {2010}
}

2011

@inproceedings{digiuseppe2011fault,
  title={Fault interaction and its repercussions},
  author={DiGiuseppe, Nicholas and Jones, James A},
  booktitle=ieeeicsm,
  pages={3--12},
  year={2011},
  organization={IEEE}
}

@inproceedings{namin2011theuse,

  author = {Namin, Akbar Siami and Kakarla, Sahitya},
  booktitle = acmissta,
  doi = {10.1145/2001420.2001461},
  isbn = {9781450305624},
  keywords = {experimental design,hand-seeded faults,mutants,mutation,mutation testing,real faults,statistical analysis,unread},
  pages = {342},
  publisher = {ACM Press},
  title = {{The use of mutation in testing experiments and its sensitivity to external threats}},
  tag={printed},
  year = {2011}
}
@article{just2011using,

  author = {Just, Rene and Kapfhammer, Gregory M. and Schweiggert, Franz},
  doi = {10.1145/1982595.1982606},
  isbn = {9781450305921},
  journal = astw,
  keywords = {compiler-integrated,instrumentation,mutation,mutation analysis},
  pages = {50},
  publisher = {ACM Press},
  title = {{Using conditional mutation to increase the efficiency of mutation analysis}},
  year = {2011}
}





@inproceedings{gabriel2006ultra,
  title={Ultra-large-scale systems},
  author={Gabriel, Richard P and Northrop, Linda and Schmidt, Douglas C and Sullivan, Kevin},
  booktitle={Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications},
  pages={632--634},
  year={2006},
  organization={ACM}
}

@article{atzori2010internet,
  title={The internet of things: A survey},
  author={Atzori, Luigi and Iera, Antonio and Morabito, Giacomo},
  journal={Computer networks},
  volume={54},
  number={15},
  pages={2787--2805},
  year={2010},
  publisher={Elsevier}
}

@inproceedings{perez2014diagnosis,
 author = {Perez, Alexandre and Abreu, Rui},
 title = {A Diagnosis-based Approach to Software Comprehension},
 booktitle = {Proceedings of the 22Nd International Conference on Program Comprehension},
 series = {ICPC 2014},
 year = {2014},
 isbn = {978-1-4503-2879-1},
 location = {Hyderabad, India},
 pages = {37--47},
 numpages = {11},
 doi = {10.1145/2597008.2597151},
 acmid = {2597151},
 publisher = {ACM},
 keywords = {Fault Diagnosis, Program Comprehension, Software Evolution and Maintenance},
} 

@article{perez2016framing,
author = {Perez, Alexandre and Abreu, Rui},
year = {2016},
month = {07},
pages = {},
title = {Framing program comprehension as fault localization: Framing Program Comprehension as Fault Localization},
volume = {28},
journal = {Journal of Software: Evolution and Process},
doi = {10.1002/smr.1799}
}

@inproceedings{perez2017diagnosibility,
 author = {Perez, Alexandre and Abreu, Rui and van Deursen, Arie},
 title = {A Test-suite Diagnosability Metric for Spectrum-based Fault Localization Approaches},
 booktitle = {Proceedings of the 39th International Conference on Software Engineering},
 series = {ICSE '17},
 year = {2017},
 isbn = {978-1-5386-3868-2},
 location = {Buenos Aires, Argentina},
 pages = {654--664},
 numpages = {11},
 doi = {10.1109/ICSE.2017.66},
 acmid = {3097446},

 keywords = {coverage, diagnosability, testing},
} 

@inproceedings{Baudry2006improving,
 author = {Baudry, Benoit and Fleurey, Franck and Le Traon, Yves},
 title = {Improving Test Suites for Efficient Fault Localization},
 booktitle = {Proceedings of the 28th International Conference on Software Engineering},
 series = {ICSE '06},
 year = {2006},
 isbn = {1-59593-375-1},
 location = {Shanghai, China},
 pages = {82--91},
 numpages = {10},
 doi = {10.1145/1134285.1134299},
 acmid = {1134299},
 publisher = {ACM},
 keywords = {diagnosis, mutation analysis, test generation},
} 

@inproceedings{Kochhar2016fl,
 author = {Kochhar, Pavneet Singh and Xia, Xin and Lo, David and Li, Shanping},
 title = {Practitioners' Expectations on Automated Fault Localization},
 booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
 series = {ISSTA 2016},
 year = {2016},
 isbn = {978-1-4503-4390-9},
 location = {Saarbr\&\#252;cken, Germany},
 pages = {165--176},
 numpages = {12},
 doi = {10.1145/2931037.2931051},
 acmid = {2931051},
 publisher = {ACM},
 keywords = {Empirical Study, Fault Localization, Practitioners\&\#039; Expectations},
} 

@inproceedings{casanova2014daignosing,
  author    = {Paulo Casanova and
               David Garlan and
               Bradley R. Schmerl and
               Rui Abreu},
  title     = {Diagnosing unobserved components in self-adaptive systems},
  booktitle = {International Symposium on Software Engineering for Adaptive and
               Self-Managing Systems},
  pages     = {75--84},
  year      = {2014},
  doi       = {10.1145/2593929.2593946},
  timestamp = {Tue, 06 Nov 2018 11:06:55 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/icse/CasanovaGSA14},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

