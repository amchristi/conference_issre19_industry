% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{hughes2016building}
J.~Hughes, C.~Sparks, A.~Stoughton, R.~Parikh, A.~Reuther, and S.~Jagannathan,
  ``Building resource adaptive software systems ({BRASS}): Objectives and
  system evaluation,'' \emph{SIGSOFT Softw. Eng. Notes}, vol.~41, no.~1, pp.
  1--2, Feb. 2016.

\bibitem{seams2018keynote}
D.~Hughes, ``Seams 2018 keynote speech,''
  \url{https://conf.researchr.org/track/seams-2018/seams-2018-papers#program},
  accessed: 2018-08-09.

\bibitem{salehie2009selfadaptive}
M.~Salehie and L.~Tahvildari, ``Self-adaptive software: Landscape and research
  challenges,'' \emph{ACM Trans. Auton. Adapt. Syst.}, vol.~4, no.~2, pp.
  14:1--14:42, May 2009.

\bibitem{krupitzer2015a}
C.~Krupitzer, F.~M. Roth, S.~VanSyckel, G.~Schiele, and C.~Becker, ``A survey
  on engineering approaches for self-adaptive systems,'' \emph{Pervasive Mob.
  Comput.}, vol.~17, no.~PB, pp. 184--206, Feb. 2015.

\bibitem{christi2017saso}
A.~Christi, A.~Groce, and R.~Gopinath, ``Resource adaptation via test-based
  software minimization,'' in \emph{2017 IEEE 11th International Conference on
  Self-Adaptive and Self-Organizing Systems (SASO)}, Sept 2017, pp. 61--70.

\bibitem{misherghi2006hdd}
G.~Misherghi and Z.~Su, ``{HDD}: Hierarchical delta debugging,'' in
  \emph{Proceedings of the 28th International Conference on Software
  Engineering}, ser. ICSE '06, 2006, pp. 142--151.

\bibitem{monperrus2018asr}
M.~Monperrus, ``Automatic software repair: A bibliography,'' \emph{ACM Comput.
  Surv.}, vol.~51, no.~1, pp. 17:1--17:24, Jan. 2018.

\bibitem{exemplars}
``Self-adaptive systems artifacts and model problems,''
  \url{https://www.hpi.uni-potsdam.de/giese/public/selfadapt/exemplars/},
  accessed: 2018-10-05.

\bibitem{christi2018qrs}
A.~Christi and A.~Groce, ``Target selection for test-based resource
  adaptation,'' in \emph{2018 IEEE International Conference on Software
  Quality, Reliability and Security (QRS)}, July 2018, pp. 458--469.

\bibitem{garlan2004rainbow}
D.~Garlan, S.~W. Cheng, A.~C. Huang, B.~Schmerl, and P.~Steenkiste, ``Rainbow:
  architecture-based self-adaptation with reusable infrastructure,''
  \emph{Computer}, vol.~37, no.~10, pp. 46--54, Oct 2004.

\bibitem{LeGoues2013}
C.~Le~Goues, S.~Forrest, and W.~Weimer, ``Current challenges in automatic
  software repair,'' \emph{Software Quality Journal}, vol.~21, no.~3, pp.
  421--443, Sep 2013.

\bibitem{christi2019qrs}
A.~Christi, A.~Groce, and R.~Gopinath, ``Evaluating fault localization for
  resource adaptation via test-based software modification,'' in \emph{IEEE
  International Conference on Software Security and Reliability}, 2019, to be
  published.

\bibitem{smith2015cwd}
\BIBentryALTinterwordspacing
E.~K. Smith, E.~T. Barr, C.~Le~Goues, and Y.~Brun, ``Is the cure worse than the
  disease? overfitting in automated program repair,'' in \emph{Proceedings of
  the 2015 10th Joint Meeting on Foundations of Software Engineering}, ser.
  ESEC/FSE 2015.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY, USA: ACM,
  2015, pp. 532--543. [Online]. Available:
  \url{http://doi.acm.org/10.1145/2786805.2786825}
\BIBentrySTDinterwordspacing

\bibitem{stvrcausereduce}
A.~Groce, M.~A. Alipour, C.~Zhang, Y.~Chen, and J.~Regehr, ``Cause reduction:
  Delta debugging, even without bugs,'' \emph{Journal of Software Testing,
  Verification, and Reliability}, vol.~26, no.~1, pp. 40--68, Jan. 2016.

\bibitem{Forrest2009genetic}
S.~Forrest, T.~Nguyen, W.~Weimer, and C.~Le~Goues, ``A genetic programming
  approach to automated software repair,'' in \emph{Proceedings of the 11th
  Annual Conference on Genetic and Evolutionary Computation}, ser. GECCO
  '09.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2009, pp. 947--954.

\bibitem{Arcuri2009phdthesis}
A.~Arcuri, ``Automatic software generation and improvement through search based
  techniques,'' Ph.D. dissertation, University of Birmingham, {UK}, 2009.

\bibitem{Debroy2010using}
V.~Debroy and W.~E. Wong, ``Using mutation to automatically suggest fixes for
  faulty programs,'' in \emph{Proceedings of the 2010 Third International
  Conference on Software Testing, Verification and Validation}, ser. ICST
  '10.\hskip 1em plus 0.5em minus 0.4em\relax IEEE Computer Society, 2010, pp.
  65--74.

\bibitem{Baudry2006improving}
B.~Baudry, F.~Fleurey, and Y.~Le~Traon, ``Improving test suites for efficient
  fault localization,'' in \emph{Proceedings of the 28th International
  Conference on Software Engineering}, ser. ICSE '06.\hskip 1em plus 0.5em
  minus 0.4em\relax ACM, 2006, pp. 82--91.

\bibitem{perez2017diagnosibility}
A.~Perez, R.~Abreu, and A.~van Deursen, ``A test-suite diagnosability metric
  for spectrum-based fault localization approaches,'' in \emph{Proceedings of
  the 39th International Conference on Software Engineering}, ser. ICSE '17,
  2017, pp. 654--664.

\bibitem{xuan2014test}
J.~Xuan and M.~Monperrus, ``Test case purification for improving fault
  localization,'' in \emph{Proceedings of the 22nd ACM SIGSOFT International
  Symposium on Foundations of Software Engineering}.\hskip 1em plus 0.5em minus
  0.4em\relax ACM, 2014, pp. 52--63.

\bibitem{christi18reduce}
A.~Christi, M.~L. Olson, M.~A. Alipour, and A.~Groce, ``Reduce before you
  localize: Delta-debugging and spectrum-based fault localization,'' in
  \emph{2018 {IEEE} International Symposium on Software Reliability Engineering
  Workshops, {ISSRE} Workshops, Memphis, TN, USA, October 15-18, 2018}, 2018,
  pp. 184--191.

\end{thebibliography}
